generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id              Int        @id @default(autoincrement()) @map("category_id")
  name            String     @unique(map: "category_name") @map("category_name") @db.VarChar(30)
  parentId        Int?       @map("parent_id")
  parentCategory  Category?  @relation("categoriesTocategories", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "categories_ibfk_1")
  childCategories Category[] @relation("categoriesTocategories")
  menuItems       MenuItem[]

  @@index([parentId], map: "parent_id")
  @@map("categories")
}

model MenuItem {
  id         Int         @id @default(autoincrement()) @map("item_id")
  name       String      @unique(map: "item_name") @map("item_name") @db.VarChar(50)
  price      Decimal?    @db.Decimal(7, 2)
  categoryId Int         @map("category_id")
  stationId  Int         @map("station_id")
  category   Category    @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "menuitems_ibfk_1")
  station    Station     @relation(fields: [stationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "menuitems_ibfk_2")
  orderItems OrderItem[]

  @@index([categoryId], map: "category_id")
  @@index([stationId], map: "station_id")
  @@map("menuitems")
}

model OrderItem {
  id         Int       @id @default(autoincrement()) @map("orderitems_id")
  orderId    Int       @map("order_id")
  itemId     Int       @map("item_id")
  quantity   Int
  orderTime  DateTime  @map("order_time")
  servedTime DateTime? @map("served_time")
  order      Order     @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orderitems_ibfk_1")
  menuItem   MenuItem  @relation(fields: [itemId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orderitems_ibfk_2")

  @@index([itemId], map: "item_id")
  @@index([orderId], map: "order_id")
  @@map("orderitems")
}

model Order {
  id         Int           @id @default(autoincrement()) @map("order_id")
  statusId   Int           @map("orderstatus_id")
  waiterId   Int           @map("waiter_id")
  tableId    Int           @map("table_id")
  orderItems OrderItem[]
  status     OrderStatus   @relation(fields: [statusId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")
  waiter     User          @relation(fields: [waiterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_2")
  table      TablePhysical @relation(fields: [tableId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_3")

  @@index([statusId], map: "orderstatus_id")
  @@index([tableId], map: "table_id")
  @@index([waiterId], map: "waiter_id")
  @@map("orders")
}

model OrderStatus {
  id     Int     @id @default(autoincrement()) @map("orderstatus_id")
  name   String  @unique(map: "orderstatus_name") @map("orderstatus_name") @db.VarChar(30)
  orders Order[]

  @@map("orderstatus")
}

model Station {
  id        Int        @id @default(autoincrement()) @map("station_id")
  name      String     @unique(map: "station_name") @map("station_name") @db.VarChar(30)
  menuItems MenuItem[]

  @@map("stations")
}

model TablePhysical {
  id          Int         @id @default(autoincrement()) @map("table_id")
  name        String      @unique(map: "table_name") @map("table_name") @db.VarChar(30)
  statusId    Int         @map("tablestatus_id")
  orders      Order[]
  tableStatus TableStatus @relation(fields: [statusId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tables_ibfk_1")

  @@index([statusId], map: "tablestatus_id")
  @@map("tables")
}

model TableStatus {
  id     Int             @id @default(autoincrement()) @map("tablestatus_id")
  name   String          @unique(map: "tablestatus_name") @map("tablestatus_name") @db.VarChar(30)
  tables TablePhysical[]

  @@map("tablestatus")
}

model User {
  id       Int      @id @default(autoincrement()) @map("user_id")
  typeId   Int      @map("usertype_id")
  name     String   @unique @map("username") @db.VarChar(50)
  password String   @map("userpassword") @db.VarChar(255)
  email    String   @unique @map("useremail") @db.VarChar(50)
  orders   Order[]
  type     UserType @relation(fields: [typeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_1")

  @@index([typeId], map: "usertype_id")
  @@map("users")
}

model UserType {
  id    Int    @id @default(autoincrement()) @map("usertype_id")
  name  String @unique(map: "usertype_name") @map("usertype_name") @db.VarChar(30)
  users User[]

  @@map("usertypes")
}
