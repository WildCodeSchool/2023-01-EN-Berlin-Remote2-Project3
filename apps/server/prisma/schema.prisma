generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  category_id   Int          @id @default(autoincrement())
  category_name String       @unique(map: "category_name") @db.VarChar(30)
  parent_id     Int?
  parent        categories?  @relation("parentCategoryRelationship", fields: [parent_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "categories_ibfk_1")
  children      categories[] @relation("parentCategoryRelationship")
  menuitems     menuitems[]

  @@index([parent_id], map: "parent_id")
}

model menuitems {
  item_id     Int          @id @default(autoincrement())
  item_name   String       @unique(map: "item_name") @db.VarChar(50)
  price       Decimal?     @db.Decimal(7, 2)
  category_id Int
  station_id  Int
  category    categories   @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "menuitems_ibfk_1")
  station     stations     @relation(fields: [station_id], references: [station_id], onDelete: NoAction, onUpdate: NoAction, map: "menuitems_ibfk_2")
  orderitems  orderitems[]

  @@index([category_id], map: "category_id")
  @@index([station_id], map: "station_id")
}

model orderitems {
  orderitems_id Int       @id @default(autoincrement())
  order_id      Int
  item_id       Int
  quantity      Int
  order_time    DateTime  @db.DateTime(0)
  served_time   DateTime? @db.DateTime(0)
  order         orders    @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "orderitems_ibfk_1")
  menuitem      menuitems @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction, map: "orderitems_ibfk_2")

  @@index([item_id], map: "item_id")
  @@index([order_id], map: "order_id")
}

model orders {
  order_id       Int          @id @default(autoincrement())
  orderstatus_id Int
  waiter_id      Int
  table_id       Int
  orderitem      orderitems[]
  orderstatus    orderstatus  @relation(fields: [orderstatus_id], references: [orderstatus_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")
  user           users        @relation(fields: [waiter_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_2")
  table          tables       @relation(fields: [table_id], references: [table_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_3")

  @@index([orderstatus_id], map: "orderstatus_id")
  @@index([table_id], map: "table_id")
  @@index([waiter_id], map: "waiter_id")
}

model orderstatus {
  orderstatus_id   Int      @id @default(autoincrement())
  orderstatus_name String   @unique(map: "orderstatus_name") @db.VarChar(30)
  order            orders[]
}

model stations {
  station_id   Int         @id @default(autoincrement())
  station_name String      @unique(map: "station_name") @db.VarChar(30)
  menuitems    menuitems[]
}

model tables {
  table_id       Int         @id @default(autoincrement())
  table_name     String      @unique(map: "table_name") @db.VarChar(30)
  tablestatus_id Int
  orders         orders[]
  tablestatus    tablestatus @relation(fields: [tablestatus_id], references: [tablestatus_id], onDelete: NoAction, onUpdate: NoAction, map: "tables_ibfk_1")

  @@index([tablestatus_id], map: "tablestatus_id")
}

model tablestatus {
  tablestatus_id   Int      @id @default(autoincrement())
  tablestatus_name String   @unique(map: "tablestatus_name") @db.VarChar(30)
  tables           tables[]
}

model users {
  user_id      Int       @id @default(autoincrement())
  usertype_id  Int
  username     String    @db.VarChar(50)
  userage      Int       @default(0)
  userpassword String    @db.VarChar(255)
  useremail    String    @db.VarChar(50)
  orders       orders[]
  usertype     usertypes @relation(fields: [usertype_id], references: [usertype_id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_1")

  @@unique([username, useremail], map: "UC_User")
  @@index([usertype_id], map: "usertype_id")
}

model usertypes {
  usertype_id   Int     @id @default(autoincrement())
  usertype_name String  @unique(map: "usertype_name") @db.VarChar(30)
  users         users[]
}
